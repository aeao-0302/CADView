//
// Read CAD & ZEM Files
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;


namespace CADView
{

    class CADReader
    {
        List<GeoPoint> gPoint;  // = new List<GEOPoint>();            // List of points
        List<Vertex> lVertex;   // = new List<vertex>();
        List<GeoLine> lLine;    // = new List<GEOLine>();               // Lines
        List<CadLayer> cadL = new List<CadLayer>();                 // List of layers

        public CADReader()
        { }
        ~CADReader()
        {
            gPoint.Clear();
            lVertex.Clear();
            lLine.Clear();

            cadL.Clear();
        }
        public bool ReadCAD(string fileName, ref List<CadLayer> cadLayer)
        {
            bool result = readCADFile(fileName);
            cadLayer = cadL;
            return result;
        }

        private bool readCADFile(string fileName)
        {
            try
            {
                double[] pntList = {
                42.6462618938341,26.5521474483132,42.646212451589,26.5537977833499,42.5972381130515,26.5314664579157,42.59691830397,26.5458219404961,
                42.6578050729004,26.5490370842933,42.6413784727677,26.5494568851323,42.6381252702983,26.5501212140155,42.645759844357,26.5501073118684,
                42.6337869801179,26.5508932509036,42.6523943238496,26.5519725615912,42.6489474880287,26.5539744816574,42.6152216742369,26.554767533291,
                42.6542039931164,26.5550138513648,42.6188646620727,26.5550755463887,42.6214563961584,26.5552424573197,42.6270707492053,26.5553364631849,
                42.6299845880204,26.5554492816404,42.6335407268257,26.5555221224406,42.6387693876333,26.5558592420393,42.5995659573803,26.557332147827,
                42.6121343834446,26.5581648996509,42.63338976659,26.5587211495049,42.6405891138925,26.5587111412762,42.6081811909888,26.5591654817304,
                42.6445057172557,26.5590178124626,42.6290459469094,26.5595066590181,42.6040624478301,26.5600075572124,42.6518958828764,26.5607636027897,
                42.5851198318097,26.5607902691786,42.6009938589063,26.5609871689385,42.6412456873318,26.5610866679513,42.5996730571451,26.5611184343191,
                42.6480154737777,26.5613518319425,42.5899388893792,26.5613917906934,42.5928083945749,26.5617011020136,42.5951497236811,26.5619620757342,
                42.6123584055451,26.5620691471538,42.6145436519829,26.5620388598649,42.5846291496616,26.5620986196123,42.6098981692791,26.5622255396076,
                42.6386683860499,26.5625435532102,42.6070709201311,26.5629146706206,42.6190331984486,26.5631623796358,42.58103096986,26.5631835520924,
                42.6227761304423,26.5633036942285,42.6250113212602,26.5633767106257,42.6366252898076,26.5637832046482,42.5843535659247,26.5654314679742,
                42.5961144056134,26.5655134142862,42.6475330915054,26.565617779446,42.5989084943168,26.566628394157,42.6404734852026,26.5667721829727,
                42.6516925515999,26.5668547481406,42.6017718896638,26.5672547926853,42.643536082423,26.5674076189834,42.5773488495408,26.5680636182461,
                42.6226236810366,26.5682969249905,42.5876693724257,26.5684368771642,42.6061287959255,26.5683325009918,42.5798651029926,26.5689002152341,
                42.5935288522186,26.5686736815287,42.5844123898972,26.5690622435505,42.5906163684126,26.5692122432242,42.6107693737252,26.569156585888,
                42.5954427885299,26.5693709823653,42.6142391116856,26.5694571145642,42.6367190035466,26.5706996129695,42.6177698774624,26.5711513653117,
                42.6256862921182,26.5710079766724,42.6398764318836,26.5712869514299,42.6460728067922,26.5716409235134,42.6506517488129,26.5713765935919,
                42.6427720213657,26.5719194320725,42.6291983849678,26.5726391779611,42.5844679893272,26.572611031644,42.6276773158308,26.5728558559547,
                42.6337381547953,26.5731786708236,42.5947732346307,26.5733935679775,42.6007976155146,26.573411526902,42.5803627950026,26.573679978939,
                42.6242693799071,26.5737626530114,42.6387529206888,26.5739142359443,42.6128660742318,26.5741941234468,42.6531943454125,26.5744916289952,
                42.6422646452406,26.5750244329493,42.590837111234,26.5751366312407,42.6458831414576,26.5752956394523,42.6493619688824,26.5759041316397,
                42.6002267684235,26.576529234791,42.6091846849757,26.5764365971177,42.5878670224431,26.5767439740824,42.6279651591893,26.5767160900859,
                42.6455267849523,26.5781369817504,42.5817507509798,26.578217537733,42.6064393500316,26.5781075421131,42.6200915338651,26.5782115007768,
                42.6390319455172,26.5784352410949,42.6422835508965,26.5787759970127,42.658511960671,26.5789016315545,42.5846518532485,26.5789613561353,
                42.602550750484,26.5804838181419,42.6348648344978,26.580509888072,42.5940639652638,26.5811197347936,42.6166459540569,26.5810425588957,
                42.638511946437,26.5810534827044,42.6318750168547,26.5817983897011,42.6283061096742,26.5820681600299,42.5982645246091,26.5831708648247,
                42.6123988842188,26.5832212223297,42.6174707483009,26.5832380331552,42.6098078732165,26.5842475038448,42.6070535425596,26.5849473240562,
                42.6043943263914,26.5857921498106,42.5993056351928,26.586932042247,42.6284056754912,26.5874129417874,42.6254780445919,26.5876038342465,
                42.5954201257781,26.5880630195101,42.6223384601579,26.5878657104084,42.6177253445342,26.5882883995871,42.612727056993,26.58877366233,
                42.6092994793215,26.5895128426421,42.6058239365038,26.5901664848407,42.602740139461,26.5908475145574,42.5977744018719,26.5917063871332,
                42.6385413723891,26.6006905451822,42.6243347126402,26.6038517720433,42.6379381580396,26.5625901788074,42.6380463278401,26.5626134002609,
                42.6379373366443,26.5626572349255,42.6379913669212,26.5628241773068,42.6380984992539,26.5627594886221,42.6123747312739,26.5846124079552,
                42.6123061349661,26.5830668611913,42.6123094119825,26.5829600361013,42.6129003465212,26.5827362968083,42.6131175308009,26.5825818684134,
                42.6131352211711,26.5825811552183,42.6131499591685,26.5825802500922,42.6131419169261,26.5823415185906,42.613122336757,26.5823418482093,
                42.6131056532305,26.5823487436952,42.6131450646043,26.5821666237968,42.6131728061325,26.5821684155412,42.6131969617303,26.5821666862012,
                42.6132088476095,26.5823576298614,42.6131843405557,26.582354227054,42.6131706121515,26.5823650316972,42.6133276233763,26.5821745110775,
                42.612418585817,26.5812312756563,42.6137839436346,26.5784401916229,42.6138309868839,26.5782117159638,42.6138343057231,26.5781806837799,
                42.6137304063656,26.5781733257418,42.6137300072232,26.5781806493633,42.6137300751341,26.5782050250288,42.6138160821825,26.5781662472465,
                42.61374722564,26.5781439553054,42.6137430026667,26.5781281350751,42.613737968642,26.5781073641812,42.6138997632796,26.5780638544046,
                42.613900049674,26.5781031851805,42.6139008341788,26.5781188000719,42.6128732161674,26.5738173051124,42.6142784578985,26.5737096609906,
                42.6143677207821,26.5733969399237,42.6144294041812,26.5731717433577,42.6144987527479,26.5731010136347,42.6145061994752,26.5731278854021,
                42.6145207784379,26.5731587757523,42.614546640188,26.5732382679986,42.6145283281137,26.5733011524165,42.6145410436003,26.5733320373388,
                42.6141976341961,26.5735431688065,42.6141787548187,26.5734995052256,42.6141688153656,26.5734721508945,42.6141395773714,26.57339303911,
                42.6141327977777,26.5733655966031,42.6141280294703,26.5733357712061,42.6148399336813,26.5692774752421,42.6147754983368,26.5696892054601,
                42.6147417786762,26.5700654104495,42.6148848477646,26.5694078570462,42.6146596596199,26.5694022607297,42.6151987381823,26.5637514260934,
                42.6154488522734,26.5574243385657,42.6154284533001,26.5574244665838,42.6154039345036,26.5574285934023,42.6154117944254,26.5576366645643,
                42.6154328194404,26.557633198772,42.6154481776011,26.5576389562832,42.6156488134383,26.5573155607217,42.6154711424328,26.557522000461,
                42.6154810584709,26.557518785091,42.6155125996567,26.5575202958798,42.6155354616465,26.5573013497989,42.6155021733175,26.5573187868774,
                42.6154830379098,26.5573228306915,42.6153042030135,26.55762313895,42.6433855986792,26.5672252635562,42.6444917653798,26.5590230179038,
                42.6489167392781,26.5539478165346,42.6459386157639,26.5502488559778,42.6441349390983,26.5517309848481,42.644860391283,26.5517473794657,
                42.636426194599,26.5637689941726,42.6364087112888,26.5637165192222,42.6360799897879,26.5638125297574,42.6359376438276,26.5640645080488,
                42.6359129095765,26.5640504181065,42.6361067480112,26.5627345807657,42.6361633630902,26.5627338842713,42.6361678552803,26.5624475045118,
                42.6364352909903,26.5624520242562};

                if (!File.Exists(fileName))
                {
                    //MessageBox.Show("File not exists!!!");
                    return false;
                }
                StreamReader sr = new StreamReader(fileName, Encoding.Default);

                char[] delimiterChars = { ' ' };

                string ln;
                string[] words;

                GeoPoint ppnt;// = new GEOPoint();

                Vertex vpnt; // = new vertex();
                GeoLine gln;// = new GEOLine();
                
                CadLayer cLyr;// = new CADFile();
                cLyr = new CadLayer();
                cLyr.layer = "Cadastre";

                gPoint = new List<GeoPoint>();
                int j = 0;
                foreach (int i in pntList )
                {
                    ppnt = new GeoPoint();
                    ppnt.t = 1;                             // Type of points
                    ppnt.n = (ulong) i;         
                    ppnt.x = pntList[j];
                    ppnt.y = pntList[j + 1];
                    ppnt.h = 0;

                    gPoint.Add(ppnt);                       // List of points
                    j = j + 2;
                    if (j >= pntList.Length) break;
                }
                    lVertex = new List<Vertex>();
                    lLine = new List<GeoLine>();

                while (!sr.EndOfStream)                     // Do EOF
                {
                    lVertex = new List<Vertex>();           // lVertex.Clear(); this is error!!!, clear list but referens to firs line, show 1 line
                    gln = new GeoLine();
                    while (!sr.EndOfStream)   
                    {
                        ln = sr.ReadLine();
                        if (ln.Trim().Length < 1) continue;
                        words = ln.Split(delimiterChars, System.StringSplitOptions.RemoveEmptyEntries);
                        if (words[0] == "999" && words[1] == "999") break;
                        vpnt = new Vertex();
                        vpnt.x =Convert.ToDouble(words[0]);   // vertex
                        vpnt.y = Convert.ToDouble(words[1]);
                        lVertex.Add(vpnt);                          // vertex of line

                    }
                    gln.l = lVertex;
                    lLine.Add(gln);                             // List of line
                }                                                                      // EOF
                cLyr.pnt = gPoint;
                        
                cLyr.ln = lLine;
                                   
                cadL.Add(cLyr);
                           
                sr.Close();                                            // Close file              

                return true;
            }
            catch { return false; }
        }

    }   // class CADReader

}       // namespace CADReader

